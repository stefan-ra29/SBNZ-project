package sbnz.integracija;

import demo.facts.*;
import demo.facts.UnauthorizedUsersRecommendedBook;
import demo.facts.BookRatingLevel;


rule "pierson-rule"
    agenda-group "oldAuthorizedUsers"
    when
        $book: Book()
        $piersonCorrelationHelper: PiersonCorrelationHelper()
        $recommendedBooks: OldAuthorizedUsersRecommendedBooks()
        eval($piersonCorrelationHelper.isPiersonRuleSatisfied($book) == true)
    then
        $recommendedBooks.addBook($book);
end

rule "preferences-rule"
    agenda-group "oldAuthorizedUsers"
    when
        $book: Book()
        $userPreferencesHelper: UserPreferencesHelper()
        $recommendedBooks: OldAuthorizedUsersRecommendedBooks()
        eval($userPreferencesHelper.isUserInterestedInAuthor($book.getAuthor()) == true || $userPreferencesHelper.isUserInterestedInBookCategory($book.getCategory()) == true)
    then
        $recommendedBooks.addBook($book);
end

rule "70-percent-match-rule"
    agenda-group "oldAuthorizedUsers"
    when
        $book: Book();
        $userLikedBooksHelper: UserLikedBooksHelper();
        $oldAuthorizedUsersRecommendedBooks: OldAuthorizedUsersRecommendedBooks();
        eval($userLikedBooksHelper.isItTheDifferentBook($book) && $userLikedBooksHelper.areBooksSimilar($book))
    then
        $oldAuthorizedUsersRecommendedBooks.addBook($book);
end
